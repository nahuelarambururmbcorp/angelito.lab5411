<?php

namespace {{namespace}};

use {{rootNamespace}}Models\{{model}};
use Bpocallaghan\Titan\Http\Controllers\Admin\AdminController;

class {{class}} extends AdminController
{
	/**
	 * Display a listing of {{resource}}.
	 *
	 * @return $this
	 */
	public function index()
	{
		save_resource_url();

		return $this->view('{{viewPath}}.index')->with('items', {{model}}::all());
	}

	/**
	 * Show the form for creating a new {{resource}}.
	 *
	 * @return $this
	 */
	public function create()
	{
		return $this->view('{{viewPath}}.create_edit');
	}

	/**
	 * Store a newly created {{resource}} in storage.
	 *
	 * @return $this
	 */
	public function store()
	{
		$attributes = request()->validate({{model}}::$rules, {{model}}::$messages);

        ${{resource}} = $this->createEntry({{model}}::class, $attributes);

        return redirect_to_resource();
	}

	/**
	 * Display the specified {{resource}}.
	 *
	 * @param {{model}} ${{resource}}
	 * @return $this
	 */
	public function show({{model}} ${{resource}})
	{
		return $this->view('{{viewPath}}.show')->with('item', ${{resource}});
	}

	/**
	 * Show the form for editing the specified {{resource}}.
	 *
	 * @param {{model}} ${{resource}}
     * @return $this
     */
    public function edit({{model}} ${{resource}})
	{
		return $this->view('{{viewPath}}.create_edit')->with('item', ${{resource}});
	}

	/**
	 * Update the specified {{resource}} in storage.
	 *
	 * @param {{model}}  ${{resource}}
     * @return $this
     */
    public function update({{model}} ${{resource}})
	{
		$attributes = request()->validate({{model}}::$rules, {{model}}::$messages);

        ${{resource}} = $this->updateEntry(${{resource}}, $attributes);

        return redirect_to_resource();
	}

	/**
	 * Remove the specified {{resource}} from storage.
	 *
	 * @param {{model}}  ${{resource}}
	 * @return $this
	 */
	public function destroy({{model}} ${{resource}})
	{
		$this->deleteEntry(${{resource}}, request());

        return redirect_to_resource();
	}
}
